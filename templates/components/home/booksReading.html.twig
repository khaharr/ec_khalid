<div class="card card-grid h-full min-w-full">
    <div class="card-header">
        <h3 class="card-title">
            Mes lectures en cours
        </h3>
        <div class="input input-sm max-w-48">
            <i class="ki-filled ki-magnifier">
            </i>
            <input data-datatable-search="#current-books-table" placeholder="Rechercher" type="text"/>
        </div>
    </div>
    <div class="card-body">
        <div id="current-books-table" data-datatable="true" data-datatable-page-size="5">
            <div class="scrollable-x-auto">
                <table  id="booksTable" class="table table-border" data-datatable-table="true">
                    <thead>
                    <tr>
                        <th class="min-w-[280px]">
                            <span class="sort asc">
                                <span class="sort-label">Livre</span>
                                <span class="sort-icon"></span>
                            </span>
                        </th>
                        <th class="max-w-[135px] text-end">
                            <span class="sort">
                                <span class="sort-label">Modifié le</span>
                                <span class="sort-icon"></span>
                            </span>
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for bookRead in booksRead %}
                        <tr>
                            <td>
                                <div class="flex flex-col gap-2">
                                    <a class="leading-none font-medium text-sm text-gray-900 hover:text-primary"
                                       href="#">
                                        <h3>{{ bookRead.book.name }}</h3> <!-- Nom du livre -->
                                    </a>
                                    <span class="text-2sm text-gray-700 font-normal leading-3">
                                   <p>{{ bookRead.book.description }}</p> <!-- Description du livre -->
                                </span>
                                <button class="btn btn-edit" data-id="{{ bookRead.id }}">Modifier</button>
                                </div>
                            </td>
                            <td class="text-end">
                                {{ bookRead.updatedAt|date('d/m/Y à H:i') }}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="card-footer justify-center md:justify-between flex-col md:flex-row gap-5 text-gray-600 text-2sm font-medium">
                <div class="flex items-center gap-4 order-1 md:order-2">
                    <span data-datatable-info="true"></span>
                    <div class="pagination" data-datatable-pagination="true"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
document.querySelectorAll('.btn-edit').forEach(button => {
    button.addEventListener('click', function () {
        const bookId = this.getAttribute('data-id');
        fetch(`/api/book-read/${bookId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('book').value = data.bookId;
                document.getElementById('description').value = data.description;
                document.getElementById('rating').value = data.rating;
                document.getElementById('check').checked = data.isRead;

                const form = document.getElementById('bookReadForm');
                form.action = `/edit-book-read/${bookId}`;
                document.getElementById('book_modal').classList.add('open');
            });
    });
});

document.getElementById('bookReadForm').addEventListener('submit', function (event) {
    event.preventDefault();
    const formData = new FormData(this);
    fetch(this.action, {
        method: 'POST',
        body: formData,
    })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert(data.error);
            } else {
                // Mettre à jour le tableau
                location.reload();
            }
        });
});
</script>